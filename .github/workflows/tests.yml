name: tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tests:
    name: Java ${{ matrix.java-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        java-distribution: [adopt]
        java-version: [8, 11, 15]

    steps:
      - uses: actions/checkout@v2.1.1
        with:
          submodules: recursive

      - uses: actions/setup-java@v2
        with:
          distribution: "${{ matrix.java-distribution }}"
          java-version: "${{ matrix.java-version }}"

      - uses: docker-practice/actions-setup-docker@master
        if: "!startsWith(matrix.os, 'windows')"

      - uses: actions/cache@v2
        id: maven-cache
        with:
          path: ~/.m2/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Tests
        run: mvn "-Dh3.remove.images=true" -B -V clean test

  tests-no-docker:
    name: Java (no Docker) ${{ matrix.java-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        java-distribution: [adopt]
        java-version: [11]

    steps:
      - uses: actions/checkout@v2.1.1
        with:
          submodules: recursive

      - uses: actions/setup-java@v2
        with:
          distribution: "${{ matrix.java-distribution }}"
          java-version: "${{ matrix.java-version }}"

      - uses: actions/cache@v2
        id: maven-cache
        with:
          path: ~/.m2/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Tests
        run: |
          mvn install -DskipTests=true -B -V -Dh3.use.docker=false
          mvn test -B -Dh3.use.docker=false
